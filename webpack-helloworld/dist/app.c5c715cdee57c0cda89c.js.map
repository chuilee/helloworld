{"version":3,"sources":["webpack:///./node_modules/lodash/join.js","webpack:///./src/index.js"],"names":["nativeJoin","Array","prototype","join","module","exports","array","separator","call","element","button","br","document","body","appendChild","createElement","innerHTML","onclick","e","then","print","default"],"mappings":"8EACA,IAGIA,EAHaC,MAAMC,UAGKC,KAqB5BC,EAAOC,QAJP,SAAcC,EAAOC,GACnB,OAAgB,MAATD,EAAgB,GAAKN,EAAWQ,KAAKF,EAAOC,EACrD,C,+CCpBME,EACAC,EACAC,E,qBAkBNC,SAASC,KAAKC,aApBRL,EAAUG,SAASG,cAAc,OACjCL,EAASE,SAASG,cAAc,UAChCJ,EAAKC,SAASG,cAAc,MAEhCL,EAAOM,UAAY,oCACnBP,EAAQO,UAAY,IAAK,CAAC,QAAS,WAAY,KAC/CP,EAAQK,YAAYH,GACpBF,EAAQK,YAAYJ,GAIpBA,EAAOO,QAAWC,GAChB,iCAAkDC,MAAMf,KAEtDgB,EADYhB,EAAOiB,UACZ,IAGJZ,G","file":"app.c5c715cdee57c0cda89c.js","sourcesContent":["/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array == null ? '' : nativeJoin.call(array, separator);\n}\n\nmodule.exports = join;\n","import join from \"lodash/join\";\nimport \"./scss/main.scss\";\nfunction component() {\n  var element = document.createElement(\"div\");\n  var button = document.createElement(\"button\");\n  var br = document.createElement(\"br\");\n\n  button.innerHTML = \"Click me and look at the console!\";\n  element.innerHTML = join([\"Hello\", \"webpack\"], \" \");\n  element.appendChild(br);\n  element.appendChild(button);\n\n  // Note that because a network request is involved, some indication\n  // of loading would need to be shown in a production-level site/app.\n  button.onclick = (e) =>\n    import(/* webpackChunkName: \"print\" */ \"./print\").then((module) => {\n      var print = module.default;  // 注意当调用 ES6 模块的 import() 方法（引入模块）时，必须指向模块的 .default 值，因为它才是 promise 被处理后返回的实际的 module 对象。\n      print();\n    });\n\n  return element;\n}\n\ndocument.body.appendChild(component());\n"],"sourceRoot":""}